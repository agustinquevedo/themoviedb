{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Navbar.js","components/ResultCard.js","pages/Home.js","components/MovieCard.js","pages/Favorites.js","App.js","index.js"],"names":["AppReducer","state","action","type","favoritesList","payload","filter","movie","id","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","addToFavoritesList","removeFromFavoritesList","children","Navbar","useState","isActive","setisActive","className","role","aria-label","aria-expanded","data-target","onClick","aria-hidden","to","ResultCard","useContext","favoritesListDisabled","find","o","poster_path","src","alt","title","release_date","substring","disabled","Home","query","setQuery","results","setResults","placeholder","onChange","e","preventDefault","target","fetch","process","then","res","json","data","errors","length","map","MovieCard","class","Favorites","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c8e7d64.chunk.js","sourcesContent":["export default function AppReducer(state, action) {\n    switch(action.type) {\n        case \"ADD_TO_FAVORITES\":\n            return {\n                ...state,\n                favoritesList: [action.payload, ...state.favoritesList]\n            };\n        case \"REMOVE_FROM_FAVORITES\":\n            return {\n                ...state,\n                favoritesList: state.favoritesList.filter(movie => movie.id !== action.payload)\n            }\n        default:\n            return state;\n    }\n}","import React, { createContext, useReducer, useEffect  } from 'react'\nimport AppReducer from './AppReducer'\n\n// Initial state\nconst initialState = {\n    favoritesList: localStorage.getItem('favoritesList') \n    ? JSON.parse(localStorage.getItem('favoritesList')) \n    : [],\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState)\n\n// Provider component\nexport const GlobalProvider = props => {\n    const [state, dispatch] = useReducer(AppReducer, initialState)\n\n    useEffect(() => {\n        localStorage.setItem('favoritesList', JSON.stringify(state.favoritesList))\n    }, [state])\n\n    // Actions\n    const addToFavoritesList = movie => {\n        dispatch({type: \"ADD_TO_FAVORITES\", payload: movie})\n    }\n\n    const removeFromFavoritesList = id => {\n        dispatch({type: \"REMOVE_FROM_FAVORITES\", payload: id})\n    }\n\n    return (\n        <GlobalContext.Provider value={{ favoritesList: state.favoritesList, addToFavoritesList, removeFromFavoritesList }}>\n            {props.children}\n        </GlobalContext.Provider>\n    )\n}","import React, { useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar(){\n\n    const [isActive, setisActive] = useState(false)\n\n    return (\n        <nav className=\"navbar is-fixed-top is-primary\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"container is-max-desktop\">\n                <div className=\"navbar-brand\">\n                    <div className=\"navbar-item\">The Movie DB</div>\n                    <button\n                    className={`navbar-burger burger ${isActive ? 'is-active' : ''}`} \n                    aria-label='menu'\n                    aria-expanded='false'\n                    data-target='navbarMenu'\n                    onClick={() => {setisActive(!isActive)}}>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                        <span aria-hidden=\"true\"></span>\n                    </button>\n                </div>\n                <div id='navbarMenu' className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\n                    <div className=\"navbar-end\">\n                        <Link className=\"navbar-item\" to=\"/\" onClick={() => {setisActive(!isActive)}}>\n                            Home\n                        </Link>\n                        <Link className=\"navbar-item\" to=\"/favorites\" onClick={() => {setisActive(!isActive)}}>\n                            Favorites\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nconst ResultCard = ({movie}) => {\n    const { addToFavoritesList, favoritesList  } = useContext(GlobalContext)\n\n    let storedMovie = favoritesList.find((o) => o.id === movie.id);\n\n    const favoritesListDisabled = storedMovie ? true : false\n\n    return (\n        <div className=\"box mt-2\">\n            <div className=\"media\">\n                <div className=\"media-left\">\n                    <figure className=\"image is-128x128 is-2by3\">\n                        {\n                            movie.poster_path ? (\n                                <img \n                                    src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} \n                                    alt={`${movie.title} Poster`}\n                                    \n                                />\n                            ) : (\n                                <img \n                                    src={\"https://via.placeholder.com/200x300/0D253F/FFFFFF?text=Poster+not+found\"}\n                                    alt={\"Poster not found\"}\n                                />\n                            )\n                        }\n                    </figure>\n                </div>\n                <div className=\"media-content\">\n                    <div className=\"content\">\n                        <h3 className=\"title is-3\">{movie.title}</h3>\n                        <p className=\"subtitle is-5\">\n                            {movie.release_date ? movie.release_date.substring(0,4) : \"-\"}\n                        </p>\n                        <div className=\"field is-grouped\">\n                            <p className=\"control\">\n                                <button \n                                    className=\"button is-danger is-outlined\"\n                                    disabled={favoritesListDisabled}\n                                    onClick={() => addToFavoritesList(movie)}\n                                >\n                                    Add to Favorites\n                                </button>\n                            </p>\n                            <p className=\"control\">\n                                <button className=\"button is-primary is-outlined\">Movie Details</button>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n  \nexport default ResultCard","import React, { useState } from \"react\";\n// Components\nimport ResultCard from \"../components/ResultCard\";\n\nconst Home = () => {\n    const [query, setQuery] = useState(\"\")\n    const [results, setResults] = useState([])\n\n    const onChange = e => {\n        e.preventDefault()\n        setQuery(e.target.value)\n\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${e.target.value}`)\n            .then( res => res.json())\n            .then( data => {\n                if(!data.errors){\n                    setResults(data.results)\n                } else {\n                    setResults([])\n                }\n            })\n    }\n\n    return (\n        <>\n        <div className=\"hero is-primary\">\n            <div className=\"hero-body\">\n                <div className=\"container is-max-desktop\">\n                    <h1 className=\"title is-1 is-size-3-mobile\">Welcome to The Movie Data Base.</h1>\n                    <h2 className=\"subtitle is-3 is-size-6-mobile\">Explore now millions of movies</h2>\n                    <input \n                        className=\"input is-medium is-rounded\" \n                        type=\"text\" \n                        placeholder=\"Search for a movie\" \n                        value={query}\n                        onChange={onChange}\n                    />\n                    \n                </div>\n            </div>\n        </div>\n        <div className=\"container pb-2\">\n        {\n            results.length > 0 && (\n                <ul>\n                    { results.map(movie => (\n                        <li key={movie.id}>\n                            <ResultCard movie={movie} />\n                        </li>\n                    ))}\n                </ul>\n            )\n        }\n        </div>\n        </>\n    );\n}\n  \nexport default Home","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nconst MovieCard = ({movie, type}) => {\n    const {removeFromFavoritesList} = useContext(GlobalContext)\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-image\">\n                <figure className=\"image is-2by3\">\n                    {\n                        movie.poster_path ? (\n                            <img \n                                src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} \n                                alt={`${movie.title} Poster`}\n                                \n                            />\n                        ) : (\n                            <img \n                                src={\"https://via.placeholder.com/200x300/0D253F/FFFFFF?text=Poster+not+found\"}\n                                alt={\"Poster not found\"}\n                            />\n                        )\n                    }\n                </figure>\n            </div>\n            <div className=\"custom-card-content\">\n                <h4 className=\"title is-6\">{movie.title}</h4>\n                <button \n                    class=\"button is-small is-danger is-outlined\"\n                    onClick={() => removeFromFavoritesList(movie.id)}\n                >\n                    Remove\n                </button>\n                    \n                \n            </div>\n        </div>\n    )\n}\n\nexport default MovieCard","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport MovieCard from \"../components/MovieCard\";\n\nconst Favorites = () => {\n    const { favoritesList } = useContext(GlobalContext)\n\n    return (\n    <div className=\"container pt-2 pb-2\">\n        <h2 className=\"title is-3 is-size-5-mobile\">My favorites movies</h2>\n        { favoritesList.length > 0 ? (\n            <div className=\"columns is-multiline\">\n                {\n                    favoritesList.map(movie => (\n                        <div className=\"column is-one-quarter is-full-mobile\" key={movie.id}>\n                            <MovieCard movie={movie} type=\"favoritesList\"/>\n                        </div>\n                    ))\n                }\n            </div>\n        ) : (\n            \n            <div className=\"notification is-link is-light\">\n                <p>No movies in your favorites list, add some!</p>\n            </div>\n            \n        )\n    }\n        \n    </div>\n    );\n}\n  \nexport default Favorites","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n// Provider\nimport { GlobalProvider } from \"./context/GlobalState\"\n// Components\nimport Navbar from './components/Navbar'\n// Pages\nimport Home from './pages/Home'\nimport Favorites from './pages/Favorites'\n\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Navbar />\n        \n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/favorites\" component={Favorites}/>\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// Styles\nimport './styles/main.scss'\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}